# reference:
https://blog.includesecurity.com/2015/11/NordicSemi-ARM-SoC-Firmware-dumping-technique.html
https://www.pentestpartners.com/security-blog/nrf51822-code-readout-protection-bypass-a-how-to/

# Includes how to convert a .bin to 
https://ncrmnt.org/2019/04/14/note-to-self-how-to-flash-bin-files-via-raw-gdb/

# openocd startup using j-link
openocd.exe -f interface\jlink.cfg  -c "transport select swd" -c "adapter_khz 6000" -f target\nrf51.cfg

# openocd command to reset and halt the processor
reset halt

# scripts
# for me, found instructions that didn't help or I used wrong. Ended up using the instruction and register that Ruthsarian used -sidd
drop.py   : searches for an instruction that will write contents of a memory address to 

# original version switches the endianness
pickup.py : using the instruction found with drop.py, will read back the contents of flash memory

# Command to convert the extracted .bin to .hex for programming:
arm-none-eabi-objcopy -I binary -B arm -O ihex -S backup.bin backup.hex

#to program via SWD & JLink:
nrfjprog -f nrf51 --program backup.hex
